doctype html
html(lang='en')
    head
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
        meta(name='description', content='')
        meta(name='author', content='')

        title docAider

        link(rel='icon', type='image/x-icon', href='assets/favicon.ico')

        include includes/css.pug

    body
        include includes/navbar.pug

        // Page Header
        header.masthead(style="background-image: url('assets/img/about-bg.jpg')")
            .container.position-relative.px-4.px-lg-5
                .row.gx-4.gx-lg-5.justify-content-center
                    .col-md-10.col-lg-8.col-xl-7
                        .page-heading
                            h1 Documentation Generation
                            span.subheading docAider's Documentation Generation.

        // Main Content
        main.mb-4
            .container.px-4.px-lg-5
                .row.gx-4.gx-lg-5.justify-content-center
                    .col-md-10
                        p 
                            | We adopted a multi-agent system, where each agent is responsible for a specific task. Working in a sequential manner, the agents build on the outputs of the previous stages, resulting in more accurate and coherent documentation while reducing hallucinations. By focusing on specific domains and tasks, each agent contributes to the overall accuracy, following a chain–of–thought process.
                        
                        h4(style="text-align: center;") Multi-Agent System Architecture
                        .col
                            .centered-image-container(style="display: flex; justify-content: center; align-items: center;")
                                img(src="assets/multi_agent_diagram.png", alt="Multi-Agent System Architecture", style="max-width: 80%; height: auto;")
                        
                        p
                            | In our implementation we used several state-of-art Microsoft tools including Microsoft Semantic Kernel and Microsoft Autogen, as well as GPT-4-0125-preview for powering all agents.
                        
                        p
                            | The multi-agent conversation, as mentioned, follows a sequential pattern, which means the agents perform a sequence of chats, chained together by a carryover mechanism to complete a task. The carryover, which is the output of the previous chat, is passed to the next chat as the context information so that subsequent agents have the knowledge from previous chats. 
                            
                        p
                            | The baseline response generated by the documentation generation agent is potentially prone to hallucination. Therefore, we use the LLM self-check mechanism to review and improve the initial documentation, which consists of four steps:

                        h4 Generate function relationship data
                        p
                            | This Code Context Agent creates a graph representation of the entire repository, mapping out the relationships between function calls. It then generates comprehensive information about the code by using both the actual source code and the relationship data from the graph related to that source code.

                        h4 Generate a baseline documentation
                        p
                            | The Documentation Generation agent generates documentation for the code, taking into account the context explanation returned from the code context agent.

                        h4 Review the documentation
                        p
                            | The Review Agent checks the documentation and generates a review report, including comments and improvement suggestions.

                        h4 Generate improved documentation
                        p
                            | The Revise Agent receives the review report, modifies the documentation according to the suggestions, and finally returns an improved documentation to the agent manager.

        include includes/footer.pug

        include includes/scripts.pug
